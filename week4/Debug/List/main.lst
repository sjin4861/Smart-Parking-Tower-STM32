###############################################################################
#
# IAR ANSI C/C++ Compiler V8.22.1.15669/W32 for ARM       02/Oct/2024  21:44:22
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  C:\Users\pnu10\Desktop\project_test\user\main.c
#    Command line =  
#        -f C:\Users\pnu10\AppData\Local\Temp\EW3ED5.tmp
#        (C:\Users\pnu10\Desktop\project_test\user\main.c -D
#        USE_STDPERIPH_DRIVER -D STM32F10X_CL -lC
#        C:\Users\pnu10\Desktop\project_test\Debug\List -o
#        C:\Users\pnu10\Desktop\project_test\Debug\Obj --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\pnu10\Desktop\project_test\libraries\CMSIS\DeviceSupport\ -I
#        C:\Users\pnu10\Desktop\project_test\libraries\CMSIS\DeviceSupport\Startup\
#        -I
#        C:\Users\pnu10\Desktop\project_test\libraries\STM32F10x_StdPeriph_Driver_v3.5\inc\
#        -I
#        C:\Users\pnu10\Desktop\project_test\libraries\STM32F10x_StdPeriph_Driver_v3.5\src\
#        -I C:\Users\pnu10\Desktop\project_test\user\ -I
#        C:\Users\pnu10\Desktop\project_test\user\inc\ -Ol -I "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 8.0\arm\CMSIS\Core\Include\" -I
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =  C:\Users\pnu10\Desktop\project_test\Debug\List\main.lst
#    Object file  =  C:\Users\pnu10\Desktop\project_test\Debug\Obj\main.o
#
###############################################################################

C:\Users\pnu10\Desktop\project_test\user\main.c
      1          #include "stm32f10x.h"
      2          //@@@@@ @@@@ @@@@ : @@ @@@ @@@@
      3          #define RCC_APB2ENR *(volatile unsigned int *)0x40021018
      4          
      5          //@@@@@ @@@@ @@@@ : LED@ @@@ @@@@
      6          //#define GPIOD_CRL *(volatile unsigned int *)0x40011400       
      7          //#define GPIOD_BSRR *(volatile unsigned int *)0x40011410      
      8          
      9          //@@@@@ @@@@ @@@@ : @@@ @@@ @@@@ (GPIOC_CRH@ @@@@@ @@@(PC8, PC9)
     10          
     11          #define GPIOB_CRH *(volatile unsigned int *)0x40010C04
     12          #define GPIOB_IDR *(volatile unsigned int *)0x40010C08
     13          
     14          #define GPIOC_CRL *(volatile unsigned int *)0x40011000
     15          #define GPIOC_CRH *(volatile unsigned int *)0x40011004
     16          #define GPIOC_IDR *(volatile unsigned int *)0x40011008      
     17                
     18          //@@@@@ @@@@ @@@@ : @@ @@@@ @@@ @@@@
     19          #define GPIOC_BSRR *(volatile unsigned int *)0x40011010  
     20          

   \                                 In section .text, align 2, keep-with-next
     21          void delay(){
     22            int i;
     23            for(i = 0;i<5000000; i++){}
   \                     delay: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0xE000             B.N      ??delay_0
   \                     ??delay_1: (+1)
   \   00000004   0x1C40             ADDS     R0,R0,#+1
   \                     ??delay_0: (+1)
   \   00000006   0x....             LDR.N    R1,??DataTable1  ;; 0x4c4b40
   \   00000008   0x4288             CMP      R0,R1
   \   0000000A   0xDBFB             BLT.N    ??delay_1
     24          }
   \   0000000C   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
     25          int main(void){
   \                     main: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     26            RCC_APB2ENR = 0x18; //port A, B, C @@@@@
   \   00000002   0x2018             MOVS     R0,#+24
   \   00000004   0x....             LDR.N    R1,??DataTable1_1  ;; 0x40021018
   \   00000006   0x6008             STR      R0,[R1, #+0]
     27            
     28            GPIOC_CRL &= 0xFFF0FFFF; //Port C @@@@ @@@
   \   00000008   0x....             LDR.N    R0,??DataTable1_2  ;; 0x40011000
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0xF430 0x2070      BICS     R0,R0,#0xF0000
   \   00000010   0x....             LDR.N    R1,??DataTable1_2  ;; 0x40011000
   \   00000012   0x6008             STR      R0,[R1, #+0]
     29            GPIOC_CRL |= 0x00080000;
   \   00000014   0x....             LDR.N    R0,??DataTable1_2  ;; 0x40011000
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xF450 0x2000      ORRS     R0,R0,#0x80000
   \   0000001C   0x....             LDR.N    R1,??DataTable1_2  ;; 0x40011000
   \   0000001E   0x6008             STR      R0,[R1, #+0]
     30            
     31            GPIOB_CRH &= 0xFFFFF0FF; //Port B @@@@ @@@
   \   00000020   0x....             LDR.N    R0,??DataTable1_3  ;; 0x40010c04
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0xF430 0x6070      BICS     R0,R0,#0xF00
   \   00000028   0x....             LDR.N    R1,??DataTable1_3  ;; 0x40010c04
   \   0000002A   0x6008             STR      R0,[R1, #+0]
     32            GPIOB_CRH |= 0x00000800;
   \   0000002C   0x....             LDR.N    R0,??DataTable1_3  ;; 0x40010c04
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0xF450 0x6000      ORRS     R0,R0,#0x800
   \   00000034   0x....             LDR.N    R1,??DataTable1_3  ;; 0x40010c04
   \   00000036   0x6008             STR      R0,[R1, #+0]
     33            
     34            GPIOC_CRH &= 0xFF0FFF00;// 3@@ @@
   \   00000038   0x....             LDR.N    R0,??DataTable1_4  ;; 0x40011004
   \   0000003A   0x6801             LDR      R1,[R0, #+0]
   \   0000003C   0x....             LDR.N    R0,??DataTable1_5  ;; 0xff0fff00
   \   0000003E   0x4001             ANDS     R1,R0,R1
   \   00000040   0x....             LDR.N    R0,??DataTable1_4  ;; 0x40011004
   \   00000042   0x6001             STR      R1,[R0, #+0]
     35            GPIOC_CRH |= 0x00800033;
   \   00000044   0x....             LDR.N    R0,??DataTable1_4  ;; 0x40011004
   \   00000046   0x6800             LDR      R0,[R0, #+0]
   \   00000048   0xF440 0x0000      ORR      R0,R0,#0x800000
   \   0000004C   0xF050 0x0033      ORRS     R0,R0,#0x33
   \   00000050   0x....             LDR.N    R1,??DataTable1_4  ;; 0x40011004
   \   00000052   0x6008             STR      R0,[R1, #+0]
     36            
     37          
     38            
     39           // GPIOD_CRL &= 0x0FF000FF;
     40           // GPIOD_CRL |= 0x10011100;
     41            
     42           // GPIOD_BSRR |= 0x0000009C;
     43            int mode = 0;
   \   00000054   0x2400             MOVS     R4,#+0
     44          
     45              GPIOC_BSRR = 0xFFFF0000;
   \   00000056   0x....             LDR.N    R0,??DataTable1_6  ;; 0xffff0000
   \   00000058   0x....             LDR.N    R1,??DataTable1_7  ;; 0x40011010
   \   0000005A   0x6008             STR      R0,[R1, #+0]
     46            
     47            while(1){
     48          
     49              if(!(GPIOC_IDR & (1<<4))){ 
   \                     ??main_0: (+1)
   \   0000005C   0x....             LDR.N    R0,??DataTable1_8  ;; 0x40011008
   \   0000005E   0x6800             LDR      R0,[R0, #+0]
   \   00000060   0x06C0             LSLS     R0,R0,#+27
   \   00000062   0xD400             BMI.N    ??main_1
     50                mode = 1;
   \   00000064   0x2401             MOVS     R4,#+1
     51              }
     52              if(!(GPIOB_IDR & (1<<10))){
   \                     ??main_1: (+1)
   \   00000066   0x....             LDR.N    R0,??DataTable1_9  ;; 0x40010c08
   \   00000068   0x6800             LDR      R0,[R0, #+0]
   \   0000006A   0x0540             LSLS     R0,R0,#+21
   \   0000006C   0xD400             BMI.N    ??main_2
     53               mode = 2;
   \   0000006E   0x2402             MOVS     R4,#+2
     54              }
     55              if(!(GPIOC_IDR &(1<<13))){
   \                     ??main_2: (+1)
   \   00000070   0x....             LDR.N    R0,??DataTable1_8  ;; 0x40011008
   \   00000072   0x6800             LDR      R0,[R0, #+0]
   \   00000074   0x0480             LSLS     R0,R0,#+18
   \   00000076   0xD400             BMI.N    ??main_3
     56               mode = 3;
   \   00000078   0x2403             MOVS     R4,#+3
     57              }
     58              
     59              if(mode == 1)
   \                     ??main_3: (+1)
   \   0000007A   0x2C01             CMP      R4,#+1
   \   0000007C   0xD109             BNE.N    ??main_4
     60              {
     61                GPIOC_BSRR = 0x00000300;
   \   0000007E   0xF44F 0x7040      MOV      R0,#+768
   \   00000082   0x....             LDR.N    R1,??DataTable1_7  ;; 0x40011010
   \   00000084   0x6008             STR      R0,[R1, #+0]
     62                delay();
   \   00000086   0x.... 0x....      BL       delay
     63                GPIOC_BSRR = 0x03000000;
   \   0000008A   0xF05F 0x7040      MOVS     R0,#+50331648
   \   0000008E   0x....             LDR.N    R1,??DataTable1_7  ;; 0x40011010
   \   00000090   0x6008             STR      R0,[R1, #+0]
     64                 
     65              }
     66              if(mode == 2)
   \                     ??main_4: (+1)
   \   00000092   0x2C02             CMP      R4,#+2
   \   00000094   0xD109             BNE.N    ??main_5
     67              {
     68                 GPIOC_BSRR = 0x00000100;
   \   00000096   0xF44F 0x7080      MOV      R0,#+256
   \   0000009A   0x....             LDR.N    R1,??DataTable1_7  ;; 0x40011010
   \   0000009C   0x6008             STR      R0,[R1, #+0]
     69                 delay();
   \   0000009E   0x.... 0x....      BL       delay
     70                 GPIOC_BSRR = 0x01000000;
   \   000000A2   0xF05F 0x7080      MOVS     R0,#+16777216
   \   000000A6   0x....             LDR.N    R1,??DataTable1_7  ;; 0x40011010
   \   000000A8   0x6008             STR      R0,[R1, #+0]
     71             
     72              }
     73                
     74              if(mode == 3)
   \                     ??main_5: (+1)
   \   000000AA   0x2C03             CMP      R4,#+3
   \   000000AC   0xD109             BNE.N    ??main_6
     75              {
     76                 GPIOC_BSRR = 0x00000200;
   \   000000AE   0xF44F 0x7000      MOV      R0,#+512
   \   000000B2   0x....             LDR.N    R1,??DataTable1_7  ;; 0x40011010
   \   000000B4   0x6008             STR      R0,[R1, #+0]
     77                 delay();
   \   000000B6   0x.... 0x....      BL       delay
     78                 GPIOC_BSRR = 0x02000000;
   \   000000BA   0xF05F 0x7000      MOVS     R0,#+33554432
   \   000000BE   0x....             LDR.N    R1,??DataTable1_7  ;; 0x40011010
   \   000000C0   0x6008             STR      R0,[R1, #+0]
     79              }
     80              mode = 0;
   \                     ??main_6: (+1)
   \   000000C2   0x2400             MOVS     R4,#+0
   \   000000C4   0xE7CA             B.N      ??main_0
     81                
     82              
     83            }
     84            
     85          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x004C4B40         DC32     0x4c4b40

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x40021018         DC32     0x40021018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x40011000         DC32     0x40011000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x40010C04         DC32     0x40010c04

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x40011004         DC32     0x40011004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0xFF0FFF00         DC32     0xff0fff00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0xFFFF0000         DC32     0xffff0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x40011010         DC32     0x40011010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x40011008         DC32     0x40011008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_9:
   \   00000000   0x40010C08         DC32     0x40010c08

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   delay
       8   main
         8   -> delay


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
      14  delay
     198  main

 
 252 bytes in section .text
 
 252 bytes of CODE memory

Errors: none
Warnings: none
