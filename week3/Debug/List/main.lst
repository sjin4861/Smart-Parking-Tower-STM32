###############################################################################
#
# IAR ANSI C/C++ Compiler V8.22.1.15669/W32 for ARM       25/Sep/2024  21:57:04
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  C:\Users\pnu10\Desktop\project_test\user\main.c
#    Command line =  
#        -f C:\Users\pnu10\AppData\Local\Temp\EWDDC2.tmp
#        (C:\Users\pnu10\Desktop\project_test\user\main.c -D
#        USE_STDPERIPH_DRIVER -D STM32F10X_CL -lC
#        C:\Users\pnu10\Desktop\project_test\Debug\List -o
#        C:\Users\pnu10\Desktop\project_test\Debug\Obj --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\pnu10\Desktop\project_test\libraries\CMSIS\DeviceSupport\ -I
#        C:\Users\pnu10\Desktop\project_test\libraries\CMSIS\DeviceSupport\Startup\
#        -I
#        C:\Users\pnu10\Desktop\project_test\libraries\STM32F10x_StdPeriph_Driver_v3.5\inc\
#        -I
#        C:\Users\pnu10\Desktop\project_test\libraries\STM32F10x_StdPeriph_Driver_v3.5\src\
#        -I C:\Users\pnu10\Desktop\project_test\user\ -I
#        C:\Users\pnu10\Desktop\project_test\user\inc\ -Ol -I "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 8.0\arm\CMSIS\Core\Include\" -I
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =  C:\Users\pnu10\Desktop\project_test\Debug\List\main.lst
#    Object file  =  C:\Users\pnu10\Desktop\project_test\Debug\Obj\main.o
#
###############################################################################

C:\Users\pnu10\Desktop\project_test\user\main.c
      1          #include "stm32f10x.h"
      2          #include <stdio.h>
      3          #include <time.h>
      4          
      5          #define RCC_APB2_ENR *(volatile unsigned int *)0x40021018
      6          
      7          #define GPIOA_CRL *(volatile unsigned int *)0x40010800 //PortA 
      8          #define GPIOA_IDR *(volatile unsigned int *)0x40010808 //PortA + offset
      9          
     10          #define GPIOB_CRH *(volatile unsigned int *)0x40010C04 //PortB
     11          #define GPIOB_IDR *(volatile unsigned int *)0x40010C08 //PortB + offset
     12          
     13          #define GPIOC_CRL *(volatile unsigned int *)0x40011000 //PortC = LOW
     14          #define GPIOC_CRH *(volatile unsigned int *)0x40011004 //PortC = HIGH
     15          #define GPIOC_IDR *(volatile unsigned int *)0x40011008 //PortC + offset
     16          
     17          #define GPIOD_CRL *(volatile unsigned int *)0x40011400 //PortD
     18          #define GPIOD_BSRR *(volatile unsigned int *)0x40011410 
     19          #define GPIOD_BRR *(volatile unsigned int *)0x40011414
     20          
     21          

   \                                 In section .text, align 4, keep-with-next
     22          int main(void)
     23          {
     24            RCC_APB2_ENR |= 0x3C;//@@ @@@ @@@ A,B,C,D@ @@@@@
   \                     main: (+1)
   \   00000000   0x4842             LDR.N    R0,??main_0      ;; 0x40021018
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF050 0x003C      ORRS     R0,R0,#0x3C
   \   00000008   0x4940             LDR.N    R1,??main_0      ;; 0x40021018
   \   0000000A   0x6008             STR      R0,[R1, #+0]
     25            
     26            //key1
     27            GPIOC_CRL &= 0xFFF0FFFF;
   \   0000000C   0x4840             LDR.N    R0,??main_0+0x4  ;; 0x40011000
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0xF430 0x2070      BICS     R0,R0,#0xF0000
   \   00000014   0x493E             LDR.N    R1,??main_0+0x4  ;; 0x40011000
   \   00000016   0x6008             STR      R0,[R1, #+0]
     28            GPIOC_CRL |= 0x00080000;
   \   00000018   0x483D             LDR.N    R0,??main_0+0x4  ;; 0x40011000
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0xF450 0x2000      ORRS     R0,R0,#0x80000
   \   00000020   0x493B             LDR.N    R1,??main_0+0x4  ;; 0x40011000
   \   00000022   0x6008             STR      R0,[R1, #+0]
     29            
     30            //key2
     31            GPIOB_CRH &= 0xFFFFF0FF;
   \   00000024   0x483B             LDR.N    R0,??main_0+0x8  ;; 0x40010c04
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0xF430 0x6070      BICS     R0,R0,#0xF00
   \   0000002C   0x4939             LDR.N    R1,??main_0+0x8  ;; 0x40010c04
   \   0000002E   0x6008             STR      R0,[R1, #+0]
     32            GPIOB_CRH |= 0x00000800;
   \   00000030   0x4838             LDR.N    R0,??main_0+0x8  ;; 0x40010c04
   \   00000032   0x6800             LDR      R0,[R0, #+0]
   \   00000034   0xF450 0x6000      ORRS     R0,R0,#0x800
   \   00000038   0x4936             LDR.N    R1,??main_0+0x8  ;; 0x40010c04
   \   0000003A   0x6008             STR      R0,[R1, #+0]
     33              
     34            //key3
     35            GPIOC_CRH &= 0xFF0FFFFF;
   \   0000003C   0x4836             LDR.N    R0,??main_0+0xC  ;; 0x40011004
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0xF430 0x0070      BICS     R0,R0,#0xF00000
   \   00000044   0x4934             LDR.N    R1,??main_0+0xC  ;; 0x40011004
   \   00000046   0x6008             STR      R0,[R1, #+0]
     36            GPIOC_CRH |= 0x00800000;
   \   00000048   0x4833             LDR.N    R0,??main_0+0xC  ;; 0x40011004
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   00000050   0x4931             LDR.N    R1,??main_0+0xC  ;; 0x40011004
   \   00000052   0x6008             STR      R0,[R1, #+0]
     37            
     38            //key4
     39            GPIOA_CRL &= 0xFFFFFFF0;  
   \   00000054   0x4831             LDR.N    R0,??main_0+0x10  ;; 0x40010800
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0x0900             LSRS     R0,R0,#+4
   \   0000005A   0x0100             LSLS     R0,R0,#+4
   \   0000005C   0x492F             LDR.N    R1,??main_0+0x10  ;; 0x40010800
   \   0000005E   0x6008             STR      R0,[R1, #+0]
     40            GPIOA_CRL |= 0x00000008;
   \   00000060   0x482E             LDR.N    R0,??main_0+0x10  ;; 0x40010800
   \   00000062   0x6800             LDR      R0,[R0, #+0]
   \   00000064   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000068   0x492C             LDR.N    R1,??main_0+0x10  ;; 0x40010800
   \   0000006A   0x6008             STR      R0,[R1, #+0]
     41            
     42            //LED
     43            GPIOD_CRL &= 0x0FF000FF;
   \   0000006C   0x482C             LDR.N    R0,??main_0+0x14  ;; 0x40011400
   \   0000006E   0x6801             LDR      R1,[R0, #+0]
   \   00000070   0x482C             LDR.N    R0,??main_0+0x18  ;; 0xff000ff
   \   00000072   0x4001             ANDS     R1,R0,R1
   \   00000074   0x482A             LDR.N    R0,??main_0+0x14  ;; 0x40011400
   \   00000076   0x6001             STR      R1,[R0, #+0]
     44            GPIOD_CRL |= 0x10011100; // PORT D 2,3,4,7 LED @@ @@
   \   00000078   0x4829             LDR.N    R0,??main_0+0x14  ;; 0x40011400
   \   0000007A   0x6801             LDR      R1,[R0, #+0]
   \   0000007C   0x482A             LDR.N    R0,??main_0+0x1C  ;; 0x10011100
   \   0000007E   0x4301             ORRS     R1,R0,R1
   \   00000080   0x4827             LDR.N    R0,??main_0+0x14  ;; 0x40011400
   \   00000082   0x6001             STR      R1,[R0, #+0]
     45              
     46            GPIOD_BSRR = 0x00000000; // LED 2,3,4,7 @ @
   \   00000084   0x2000             MOVS     R0,#+0
   \   00000086   0x4929             LDR.N    R1,??main_0+0x20  ;; 0x40011410
   \   00000088   0x6008             STR      R0,[R1, #+0]
     47            GPIOD_BSRR |= 0x0000009C; // LED 2,3,4,7
   \   0000008A   0x4828             LDR.N    R0,??main_0+0x20  ;; 0x40011410
   \   0000008C   0x6800             LDR      R0,[R0, #+0]
   \   0000008E   0xF050 0x009C      ORRS     R0,R0,#0x9C
   \   00000092   0x4926             LDR.N    R1,??main_0+0x20  ;; 0x40011410
   \   00000094   0x6008             STR      R0,[R1, #+0]
     48            
     49            int mode = 0;
   \   00000096   0x2000             MOVS     R0,#+0
   \   00000098   0xE005             B.N      ??main_1
     50              
     51            while(1){
     52              
     53              // mode1
     54              if (!(GPIOC_IDR & (1<<4))){
     55                mode = 1;
     56              }
     57              
     58              // mode2
     59              if(!(GPIOB_IDR & (1<<10))){
     60                mode = 2;
     61              }
     62               
     63              // mode3
     64              if(!(GPIOC_IDR & (1<<13))){
     65                mode = 3;
     66              }
     67              
     68              // mode4
     69              if(!(GPIOA_IDR & (1<<0))){
     70                mode = 4;
     71              }
     72                
     73              
     74              switch(mode)
     75              {
     76              case 1:
     77                //GPIOD_BRR |= 0x0000009C;
     78                GPIOD_BSRR |= 0x00840000;
   \                     ??main_2: (+1)
   \   0000009A   0x4924             LDR.N    R1,??main_0+0x20  ;; 0x40011410
   \   0000009C   0x6809             LDR      R1,[R1, #+0]
   \   0000009E   0xF451 0x0104      ORRS     R1,R1,#0x840000
   \   000000A2   0x4A22             LDR.N    R2,??main_0+0x20  ;; 0x40011410
   \   000000A4   0x6011             STR      R1,[R2, #+0]
     79                break;
   \                     ??main_1: (+1)
   \   000000A6   0x4922             LDR.N    R1,??main_0+0x24  ;; 0x40011008
   \   000000A8   0x6809             LDR      R1,[R1, #+0]
   \   000000AA   0x06C9             LSLS     R1,R1,#+27
   \   000000AC   0xD400             BMI.N    ??main_3
   \   000000AE   0x2001             MOVS     R0,#+1
   \                     ??main_3: (+1)
   \   000000B0   0x4920             LDR.N    R1,??main_0+0x28  ;; 0x40010c08
   \   000000B2   0x6809             LDR      R1,[R1, #+0]
   \   000000B4   0x0549             LSLS     R1,R1,#+21
   \   000000B6   0xD400             BMI.N    ??main_4
   \   000000B8   0x2002             MOVS     R0,#+2
   \                     ??main_4: (+1)
   \   000000BA   0x491D             LDR.N    R1,??main_0+0x24  ;; 0x40011008
   \   000000BC   0x6809             LDR      R1,[R1, #+0]
   \   000000BE   0x0489             LSLS     R1,R1,#+18
   \   000000C0   0xD400             BMI.N    ??main_5
   \   000000C2   0x2003             MOVS     R0,#+3
   \                     ??main_5: (+1)
   \   000000C4   0x491C             LDR.N    R1,??main_0+0x2C  ;; 0x40010808
   \   000000C6   0x6809             LDR      R1,[R1, #+0]
   \   000000C8   0x07C9             LSLS     R1,R1,#+31
   \   000000CA   0xD400             BMI.N    ??main_6
   \   000000CC   0x2004             MOVS     R0,#+4
   \                     ??main_6: (+1)
   \   000000CE   0x2801             CMP      R0,#+1
   \   000000D0   0xD0E3             BEQ.N    ??main_2
   \   000000D2   0xD3E8             BCC.N    ??main_1
   \   000000D4   0x2803             CMP      R0,#+3
   \   000000D6   0xD00A             BEQ.N    ??main_7
   \   000000D8   0xD302             BCC.N    ??main_8
   \   000000DA   0x2804             CMP      R0,#+4
   \   000000DC   0xD00E             BEQ.N    ??main_9
   \   000000DE   0xE7E2             B.N      ??main_1
     80              case 2:
     81                //GPIOD_BRR |= 0x0000009C;
     82                GPIOD_BSRR |= 0x00000084;
   \                     ??main_8: (+1)
   \   000000E0   0x4912             LDR.N    R1,??main_0+0x20  ;; 0x40011410
   \   000000E2   0x6809             LDR      R1,[R1, #+0]
   \   000000E4   0xF051 0x0184      ORRS     R1,R1,#0x84
   \   000000E8   0x4A10             LDR.N    R2,??main_0+0x20  ;; 0x40011410
   \   000000EA   0x6011             STR      R1,[R2, #+0]
     83                break;
   \   000000EC   0xE7DB             B.N      ??main_1
     84              case 3:
     85                //GPIOD_BRR |= 0x000009C;
     86                GPIOD_BSRR |= 0x00180000;
   \                     ??main_7: (+1)
   \   000000EE   0x490F             LDR.N    R1,??main_0+0x20  ;; 0x40011410
   \   000000F0   0x6809             LDR      R1,[R1, #+0]
   \   000000F2   0xF451 0x11C0      ORRS     R1,R1,#0x180000
   \   000000F6   0x4A0D             LDR.N    R2,??main_0+0x20  ;; 0x40011410
   \   000000F8   0x6011             STR      R1,[R2, #+0]
     87                break;
   \   000000FA   0xE7D4             B.N      ??main_1
     88              case 4:
     89                //GPIOD_BRR |= 0x0000009C;
     90                GPIOD_BSRR |= 0x00000018;
   \                     ??main_9: (+1)
   \   000000FC   0x490B             LDR.N    R1,??main_0+0x20  ;; 0x40011410
   \   000000FE   0x6809             LDR      R1,[R1, #+0]
   \   00000100   0xF051 0x0118      ORRS     R1,R1,#0x18
   \   00000104   0x4A09             LDR.N    R2,??main_0+0x20  ;; 0x40011410
   \   00000106   0x6011             STR      R1,[R2, #+0]
     91                break;
   \   00000108   0xE7CD             B.N      ??main_1
   \   0000010A   0xBF00             Nop      
   \                     ??main_0:
   \   0000010C   0x40021018         DC32     0x40021018
   \   00000110   0x40011000         DC32     0x40011000
   \   00000114   0x40010C04         DC32     0x40010c04
   \   00000118   0x40011004         DC32     0x40011004
   \   0000011C   0x40010800         DC32     0x40010800
   \   00000120   0x40011400         DC32     0x40011400
   \   00000124   0x0FF000FF         DC32     0xff000ff
   \   00000128   0x10011100         DC32     0x10011100
   \   0000012C   0x40011410         DC32     0x40011410
   \   00000130   0x40011008         DC32     0x40011008
   \   00000134   0x40010C08         DC32     0x40010c08
   \   00000138   0x40010808         DC32     0x40010808
     92              default:
     93                //GPIOD_BRR |= 0x00000000;
     94              }
                     ^
Warning[Pe127]: expected a statement
     95            }
     96          
     97            return 0;
                   ^
Warning[Pe111]: statement is unreachable
     98          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   main


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     316  main

 
 316 bytes in section .text
 
 316 bytes of CODE memory

Errors: none
Warnings: 2
